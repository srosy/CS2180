Microsoft (R) Macro Assembler Version 14.26.28806.0	    11/22/20 10:15:33
	CS2810-A					     Page 1 - 1


				TITLE CS2810-A3

				; Student Name: Spencer Rosenvall
				; Assignment Due Date: 11/15/2020

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data
					; FIELDS ---------------------------------------------------
 00000000 43 53 32 38 31		v_semester byte "CS2810 Fall Semester 2020",0
	   30 20 46 61 6C
	   6C 20 53 65 6D
	   65 73 74 65 72
	   20 32 30 32 30
	   00
 0000001A 41 73 73 65 6D		v_title byte "Assembler Assignment #3",0
	   62 6C 65 72 20
	   41 73 73 69 67
	   6E 6D 65 6E 74
	   20 23 33 00
 00000032 53 70 65 6E 63		v_name byte "Spencer Rosenvall",0
	   65 72 20 52 6F
	   73 65 6E 76 61
	   6C 6C 00
					
 00000044 49 6E 70 75 74		v_instruction byte "Input MP3 frame header in hex",0
	   20 4D 50 33 20
	   66 72 61 6D 65
	   20 68 65 61 64
	   65 72 20 69 6E
	   20 68 65 78 00
 00000062 54 68 65 20 72		v_result byte "The result is: ",0
	   65 73 75 6C 74
	   20 69 73 3A 20
	   00

 00000072 4D 50 45 47 20		v_mpeg25 byte "MPEG Version 2.5",0
	   56 65 72 73 69
	   6F 6E 20 32 2E
	   35 00
 00000083 4D 50 45 47 20		v_mpeg20 byte "MPEG Version 2.0",0
	   56 65 72 73 69
	   6F 6E 20 32 2E
	   30 00
 00000094 4D 50 45 47 20		v_mpeg10 byte "MPEG Version 1.0",0
	   56 65 72 73 69
	   6F 6E 20 31 2E
	   30 00
 000000A5 4D 50 45 47 20		v_mpegRE byte "MPEG Version Reserved",0
	   56 65 72 73 69
	   6F 6E 20 52 65
	   73 65 72 76 65
	   64 00

 000000BB 4C 61 79 65 72		v_layer1 byte "Layer Version I",0
	   20 56 65 72 73
	   69 6F 6E 20 49
	   00
 000000CB 4C 61 79 65 72		v_layer2 byte "Layer Version II",0
	   20 56 65 72 73
	   69 6F 6E 20 49
	   49 00
 000000DC 4C 61 79 65 72		v_layer3 byte "Layer Version III",0
	   20 56 65 72 73
	   69 6F 6E 20 49
	   49 49 00
 000000EE 4C 61 79 65 72		v_layerR byte "Layer Version Reserved",0
	   20 56 65 72 73
	   69 6F 6E 20 52
	   65 73 65 72 76
	   65 64 00

 00000105 53 61 6D 70 6C		v_MPEG100 byte "Sampling Rate 44100 Hz",0
	   69 6E 67 20 52
	   61 74 65 20 34
	   34 31 30 30 20
	   48 7A 00
 0000011C 53 61 6D 70 6C		v_MPEG200 byte "Sampling Rate 22050 Hz",0
	   69 6E 67 20 52
	   61 74 65 20 32
	   32 30 35 30 20
	   48 7A 00
 00000133 53 61 6D 70 6C		v_MPEG2500 byte "Sampling Rate 11025 Hz",0
	   69 6E 67 20 52
	   61 74 65 20 31
	   31 30 32 35 20
	   48 7A 00

 0000014A 53 61 6D 70 6C		v_MPEG101 byte "Sampling Rate 48000 Hz",0
	   69 6E 67 20 52
	   61 74 65 20 34
	   38 30 30 30 20
	   48 7A 00
 00000161 53 61 6D 70 6C		v_MPEG201 byte "Sampling Rate 24000 Hz",0
	   69 6E 67 20 52
	   61 74 65 20 32
	   34 30 30 30 20
	   48 7A 00
 00000178 53 61 6D 70 6C		v_MPEG2501 byte "Sampling Rate 12000 Hz",0
	   69 6E 67 20 52
	   61 74 65 20 31
	   32 30 30 30 20
	   48 7A 00

 0000018F 53 61 6D 70 6C		v_MPEG110 byte "Sampling Rate 32000 Hz",0
	   69 6E 67 20 52
	   61 74 65 20 33
	   32 30 30 30 20
	   48 7A 00
 000001A6 53 61 6D 70 6C		v_MPEG210 byte "Sampling Rate 16000 Hz",0
	   69 6E 67 20 52
	   61 74 65 20 31
	   36 30 30 30 20
	   48 7A 00
 000001BD 53 61 6D 70 6C		v_MPEG2510 byte "Sampling Rate 8000 Hz",0
	   69 6E 67 20 52
	   61 74 65 20 38
	   30 30 30 20 48
	   7A 00

 000001D3 53 61 6D 70 6C		v_SampleRateR byte "Sampling Rate Reserved",0
	   69 6E 67 20 52
	   61 74 65 20 52
	   65 73 65 72 76
	   65 64 00

 000001EA 0000 0000			v_MPEG_Format sword 00b,0
 00000000			.code
 00000000			main PROC
					; CODE ------------------------------------------------------
					
 00000000  E8 00000000 E		call clrscr ; clear the console
 00000005  E8 000001B7			call PrintSemesterInfo
 0000000A  E8 000001C6			call PrintTitle
 0000000F  E8 000001D5			call PrintName
 00000014  E8 000001E4			call PrintInstruction
 00000019  E8 000001F3			call ReadInput
 0000001E  E8 00000150			call DisplayVersion
 00000023  E8 00000103			call LayerDescription
 00000028  E8 00000008			call SamplingRate
 0000002D  E8 000001F0			call Finish

					; reset EAX from stored ECX value
 00000032				ResetEAX:
						;AAAA AAAA AAAB BCCD EEEE FFGH IIJJ KLMM - mp3 format
						;mov eax, 0FFFBA040h ; mpeg V1, Layer 3, 44100Hz - test
						;mov eax, 0FFF240C0h ; mpeg V2, Layer 3, 22050Hz - test
						;mov eax, 0FFFB9264h ; mpeg V1, Layer 3, 44100Hz - test
						;mov eax, 0FFFC9C64h ; mpeg V1, Layer 2, reserved - test
 00000032  8B C1				mov eax, ecx ; reset field to handle minutes next 
 00000034  C3				ret;

					; get the SamplingRate
 00000035				SamplingRate:
 00000035  E8 FFFFFFF8				call  ResetEAX
 0000003A  B6 11				mov dh, 17
 0000003C  B2 0C				mov dl, 12
 0000003E  E8 00000000 E			call gotoxy

 00000043  25 00000C00				and eax, 00000000000000000000110000000000b ; b is for binary data
 00000048  C1 E8 0A				shr eax, 10 ; shift the bits to put 11 on the end and all 0's before

						; conditional if statements
 0000004B  83 F8 03				cmp eax, 11b ; reserved
 0000004E  74 6C					jz mpegR

 00000050  83 F8 00				cmp eax, 00b
 00000053  74 0A					jz is00b

 00000055  83 F8 01				cmp eax, 01b
 00000058  74 24					jz is01b

 0000005A  83 F8 02				cmp eax, 10b
 0000005D  74 3E					jz is10b

 0000005F					is00b:
 0000005F  66| 83 3D					cmp v_MPEG_Format, 00b ; v2.5
	   000001EA R 00
 00000067  74 5E						jz mpeg2500
 00000069  66| 83 3D					cmp v_MPEG_Format, 10b ; v2
	   000001EA R 02
 00000071  74 5F						jz mpeg200
 00000073  66| 83 3D					cmp v_MPEG_Format, 11b ; v1
	   000001EA R 03
 0000007B  74 60						jz mpeg100
 0000007D  C3					ret

 0000007E					is01b:
 0000007E  66| 83 3D					cmp v_MPEG_Format, 00b ; v2.5
	   000001EA R 00
 00000086  74 60						jz mpeg2501
 00000088  66| 83 3D					cmp v_MPEG_Format, 10b ; v2
	   000001EA R 02
 00000090  74 61						jz mpeg201
 00000092  66| 83 3D					cmp v_MPEG_Format, 11b ; v1
	   000001EA R 03
 0000009A  74 62						jz mpeg101
 0000009C  C3					ret

 0000009D					is10b:
 0000009D  66| 83 3D					cmp v_MPEG_Format, 00b ; v2.5
	   000001EA R 00
 000000A5  74 62						jz mpeg2510
 000000A7  66| 83 3D					cmp v_MPEG_Format, 10b ; v2
	   000001EA R 02
 000000AF  74 63						jz mpeg210
 000000B1  66| 83 3D					cmp v_MPEG_Format, 11b ; v1
	   000001EA R 03
 000000B9  74 64						jz mpeg110
 000000BB  C3					ret
						
 000000BC					mpegR:
 000000BC  BA 000001D3 R				mov edx, offset v_SampleRateR
 000000C1  E9 000000F5					jmp DisplayString
 000000C6  C3					ret

 000000C7					mpeg2500:
 000000C7  BA 00000133 R				mov edx, offset v_MPEG2500
 000000CC  E9 000000EA					jmp DisplayString
 000000D1  C3					ret
 000000D2					mpeg200:
 000000D2  BA 0000011C R				mov edx, offset v_MPEG200
 000000D7  E9 000000DF					jmp DisplayString
 000000DC  C3					ret
 000000DD					mpeg100:
 000000DD  BA 00000105 R				mov edx, offset v_MPEG100
 000000E2  E9 000000D4					jmp DisplayString
 000000E7  C3					ret

 000000E8					mpeg2501:
 000000E8  BA 00000178 R				mov edx, offset v_MPEG2501
 000000ED  E9 000000C9					jmp DisplayString
 000000F2  C3					ret
 000000F3					mpeg201:
 000000F3  BA 00000161 R				mov edx, offset v_MPEG201
 000000F8  E9 000000BE					jmp DisplayString
 000000FD  C3					ret
 000000FE					mpeg101:
 000000FE  BA 0000014A R				mov edx, offset v_MPEG101
 00000103  E9 000000B3					jmp DisplayString
 00000108  C3					ret

 00000109					mpeg2510:
 00000109  BA 000001BD R				mov edx, offset v_MPEG2510
 0000010E  E9 000000A8					jmp DisplayString
 00000113  C3					ret
 00000114					mpeg210:
 00000114  BA 000001A6 R				mov edx, offset v_MPEG210
 00000119  E9 0000009D					jmp DisplayString
 0000011E  C3					ret
 0000011F					mpeg110:
 0000011F  BA 0000018F R				mov edx, offset v_MPEG110
 00000124  E9 00000092					jmp DisplayString
 00000129  C3					ret
 0000012A  C3				ret

					; get the layer description
 0000012B				LayerDescription:
 0000012B  E8 FFFFFF02				call ResetEAX
 00000130  B6 10				mov dh, 16
 00000132  B2 0C				mov dl, 12
 00000134  E8 00000000 E			call gotoxy

 00000139  25 00060000				and eax, 00000000000001100000000000000000b ; b is for binary data
 0000013E  C1 E8 11				shr eax, 17 ; shift the bits to put 11 on the end and all 0's before

						; conditional if statements
 00000141  83 F8 01				cmp eax, 01b 
 00000144  74 24					jz vL3
 00000146  83 F8 02				cmp eax, 10b
 00000149  74 17					jz vL2
 0000014B  83 F8 03				cmp eax, 11b
 0000014E  74 0A					jz vL1
 00000150  EB 00				jmp vLR

 00000152					vLR:
 00000152  BA 000000EE R				mov edx, offset v_layerR
 00000157  EB 62					jmp DisplayString
 00000159  C3					ret
 0000015A					vL1:
 0000015A  BA 000000BB R				mov edx, offset v_layer1
 0000015F  EB 5A					jmp DisplayString
 00000161  C3					ret
 00000162					vL2:
 00000162  BA 000000CB R				mov edx, offset v_layer2
 00000167  EB 52					jmp DisplayString
 00000169  C3					ret
 0000016A					vL3:
 0000016A  BA 000000DC R				mov edx, offset v_layer3
 0000016F  EB 4A					jmp DisplayString
 00000171  C3					ret
 00000172  C3				ret

					; print the display version
 00000173				DisplayVersion:
 00000173  E8 FFFFFEBA				call ResetEAX
 00000178  B6 0F				mov dh, 15
 0000017A  B2 0C				mov dl, 12
 0000017C  E8 00000000 E			call gotoxy

 00000181  25 00180000				and eax, 00000000000110000000000000000000b ; b is for binary data
 00000186  C1 E8 13				shr eax, 19 ; shift the bits to put 11 on the end and all 0's before
 00000189  66| A3				mov [v_MPEG_Format], ax
	   000001EA R

						; conditional if statements
 0000018F  83 F8 00				cmp eax, 00b ; performs a sudo subtraction. If numbers are the same
 00000192  74 11					jz mpeg25
 00000194  83 F8 01				cmp eax, 01b
 00000197  74 13					jz mpegRE
 00000199  83 F8 02				cmp eax, 10b
 0000019C  74 15					jz mpeg20

 0000019E  BA 00000094 R			mov edx, offset v_mpeg10
 000001A3  EB 16				jmp DisplayString

 000001A5					mpeg25:
 000001A5  BA 00000072 R				mov edx, offset v_mpeg25
 000001AA  EB 0F					jmp DisplayString

 000001AC					mpegRE:
 000001AC  BA 000000A5 R				mov edx, offset v_mpegRE
 000001B1  EB 08					jmp DisplayString

 000001B3					mpeg20:
 000001B3  BA 00000083 R				mov edx, offset v_mpeg20
 000001B8  EB 01					jmp DisplayString
 000001BA  C3				ret;

 000001BB				DisplayString:
 000001BB  E8 00000000 E			call WriteString
 000001C0  C3				ret;

					; print semester info
 000001C1				PrintSemesterInfo:
 000001C1  B6 0A				mov dh, 10 ; store 10 for row 10 in dh
 000001C3  B2 0C				mov dl, 12 ; store 12 for column in dl
 000001C5  E8 00000000 E			call gotoxy ; uses dh and dl to move cursor to (dh, dl) in console; uses Irvine assembly helper lib "http://asmirvine.com/gettingStartedVS2017/Irvine.zip"; must unzip to c:\
 000001CA  BA 00000000 R			mov edx, offset v_semester ; store pointer for v_semester => edx
 000001CF  E8 00000000 E			call WriteString ; Irvine helper method to print value of pointer in edx to console
 000001D4  C3				ret

					; print title
 000001D5				PrintTitle:
 000001D5  B6 0B				mov dh, 11
 000001D7  B2 0C				mov dl, 12
 000001D9  E8 00000000 E			call gotoxy ; clears values in both dh & dl
 000001DE  BA 0000001A R			mov edx, offset v_title
 000001E3  E8 00000000 E			call WriteString
 000001E8  C3				ret

					; print name
 000001E9				PrintName:
 000001E9  B6 0C				mov dh, 12
 000001EB  B2 0C				mov dl, 12
 000001ED  E8 00000000 E			call gotoxy
 000001F2  BA 00000032 R			mov edx, offset v_name
 000001F7  E8 00000000 E			call WriteString
 000001FC  C3				ret

					; print instruction
 000001FD				PrintInstruction:
 000001FD  B6 0D				mov dh, 13
 000001FF  B2 0C				mov dl, 12
 00000201  E8 00000000 E			call gotoxy
 00000206  BA 00000044 R			mov edx, offset v_instruction
 0000020B  E8 00000000 E			call WriteString
 00000210  C3				ret

					; read the hex input
 00000211				ReadInput:
 00000211  B6 0E				mov dh, 14
 00000213  B2 0C				mov dl, 12
 00000215  E8 00000000 E			call gotoxy
 0000021A  E8 00000000 E			call ReadHex ; input gets saved to register EAX. Ex 0154 => 10:32:02
						;ror ax, 8 ; endian reverse
 0000021F  8B C8				mov ecx, eax ; copy vals of ecx just in case
 00000221  C3				ret

 00000222				Finish:
 00000222  33 C9			xor ecx, ecx ; next two lines are equivalent of ReadLine(), waits for action before closing
 00000224  E8 00000000 E		call ReadChar
					exit
 00000229  6A 00	   *	    push   +000000000h
 0000022B  E8 00000000 E   *	    call   ExitProcess

 00000230			main ENDP

				END main
Microsoft (R) Macro Assembler Version 14.26.28806.0	    11/22/20 10:15:33
	CS2810-A					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000001EE Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000230 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000230 Public STDCALL
  ResetEAX . . . . . . . . . . .	L Near	 00000032 _TEXT	
  SamplingRate . . . . . . . . .	L Near	 00000035 _TEXT	
  is00b  . . . . . . . . . . . .	L Near	 0000005F _TEXT	
  is01b  . . . . . . . . . . . .	L Near	 0000007E _TEXT	
  is10b  . . . . . . . . . . . .	L Near	 0000009D _TEXT	
  mpegR  . . . . . . . . . . . .	L Near	 000000BC _TEXT	
  mpeg2500 . . . . . . . . . . .	L Near	 000000C7 _TEXT	
  mpeg200  . . . . . . . . . . .	L Near	 000000D2 _TEXT	
  mpeg100  . . . . . . . . . . .	L Near	 000000DD _TEXT	
  mpeg2501 . . . . . . . . . . .	L Near	 000000E8 _TEXT	
  mpeg201  . . . . . . . . . . .	L Near	 000000F3 _TEXT	
  mpeg101  . . . . . . . . . . .	L Near	 000000FE _TEXT	
  mpeg2510 . . . . . . . . . . .	L Near	 00000109 _TEXT	
  mpeg210  . . . . . . . . . . .	L Near	 00000114 _TEXT	
  mpeg110  . . . . . . . . . . .	L Near	 0000011F _TEXT	
  LayerDescription . . . . . . .	L Near	 0000012B _TEXT	
  vLR  . . . . . . . . . . . . .	L Near	 00000152 _TEXT	
  vL1  . . . . . . . . . . . . .	L Near	 0000015A _TEXT	
  vL2  . . . . . . . . . . . . .	L Near	 00000162 _TEXT	
  vL3  . . . . . . . . . . . . .	L Near	 0000016A _TEXT	
  DisplayVersion . . . . . . . .	L Near	 00000173 _TEXT	
  mpeg25 . . . . . . . . . . . .	L Near	 000001A5 _TEXT	
  mpegRE . . . . . . . . . . . .	L Near	 000001AC _TEXT	
  mpeg20 . . . . . . . . . . . .	L Near	 000001B3 _TEXT	
  DisplayString  . . . . . . . .	L Near	 000001BB _TEXT	
  PrintSemesterInfo  . . . . . .	L Near	 000001C1 _TEXT	
  PrintTitle . . . . . . . . . .	L Near	 000001D5 _TEXT	
  PrintName  . . . . . . . . . .	L Near	 000001E9 _TEXT	
  PrintInstruction . . . . . . .	L Near	 000001FD _TEXT	
  ReadInput  . . . . . . . . . .	L Near	 00000211 _TEXT	
  Finish . . . . . . . . . . . .	L Near	 00000222 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
v_MPEG100  . . . . . . . . . . .	Byte	 00000105 _DATA	
v_MPEG101  . . . . . . . . . . .	Byte	 0000014A _DATA	
v_MPEG110  . . . . . . . . . . .	Byte	 0000018F _DATA	
v_MPEG200  . . . . . . . . . . .	Byte	 0000011C _DATA	
v_MPEG201  . . . . . . . . . . .	Byte	 00000161 _DATA	
v_MPEG210  . . . . . . . . . . .	Byte	 000001A6 _DATA	
v_MPEG2500 . . . . . . . . . . .	Byte	 00000133 _DATA	
v_MPEG2501 . . . . . . . . . . .	Byte	 00000178 _DATA	
v_MPEG2510 . . . . . . . . . . .	Byte	 000001BD _DATA	
v_MPEG_Format  . . . . . . . . .	Word	 000001EA _DATA	
v_SampleRateR  . . . . . . . . .	Byte	 000001D3 _DATA	
v_instruction  . . . . . . . . .	Byte	 00000044 _DATA	
v_layer1 . . . . . . . . . . . .	Byte	 000000BB _DATA	
v_layer2 . . . . . . . . . . . .	Byte	 000000CB _DATA	
v_layer3 . . . . . . . . . . . .	Byte	 000000DC _DATA	
v_layerR . . . . . . . . . . . .	Byte	 000000EE _DATA	
v_mpeg10 . . . . . . . . . . . .	Byte	 00000094 _DATA	
v_mpeg20 . . . . . . . . . . . .	Byte	 00000083 _DATA	
v_mpeg25 . . . . . . . . . . . .	Byte	 00000072 _DATA	
v_mpegRE . . . . . . . . . . . .	Byte	 000000A5 _DATA	
v_name . . . . . . . . . . . . .	Byte	 00000032 _DATA	
v_result . . . . . . . . . . . .	Byte	 00000062 _DATA	
v_semester . . . . . . . . . . .	Byte	 00000000 _DATA	
v_title  . . . . . . . . . . . .	Byte	 0000001A _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
